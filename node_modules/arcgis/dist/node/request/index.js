'use strict';

var fetch = require('isomorphic-fetch');

/**
 * Simple request module using fetch
 * unimorphic isorequest nodularified for REPL and BROWSER
 */

var rq = {
  encodeForm: function encodeForm() {
    var form = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    return Object.keys(form).map(function (key) {
      return [key, form[key]].map(encodeURIComponent).join('=');
    }).join('&');
  },
  /**
   * Simple GET request to url, returns a promise
   * @param {String} url
   * @param {Object} form Form data appended to url as form encoded query strings
   * @returns {Promise} Response body (parsed as JSON if application/json content-type detected)
   */
  get: function get(url) {
    var form = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    form = rq.encodeForm(form);
    return fetch(url + '?' + form, { method: 'GET' }).then(function (response) {
      return response.json();
    });
  },

  /**
   * Simple POST request to url, returns a promise
   * @param {String} url
   * @param {Object} form Form data appended to url as form encoded query strings
   * @returns {Promise} Response body (parsed as JSON if application/json content-type detected)
   */
  post: function post(url) {
    var form = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    form = rq.encodeForm(form);
    return fetch(url + '?' + form, { method: 'POST' }).then(function (response) {
      return response.json();
    });
  }
};

module.exports = rq;