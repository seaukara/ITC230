'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Group;

var _end = require('../lib/end');

var _end2 = _interopRequireDefault(_end);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Group(arcgis) {
  function get(id) {
    return arcgis.request({
      url: 'community/groups/' + id
    });
  }

  return function getGroup(groupId, cb) {
    var promise = get(groupId).then(function (g) {
      g.get = get;
      g.content = function () {
        var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

        var _ref$num = _ref.num;
        var num = _ref$num === undefined ? 100 : _ref$num;
        var _ref$page = _ref.page;
        var page = _ref$page === undefined ? 0 : _ref$page;
        var _ref$sort = _ref.sort;
        var sort = _ref$sort === undefined ? 'created' : _ref$sort;
        var _ref$order = _ref.order;
        var order = _ref$order === undefined ? 'desc' : _ref$order;
        var cb = arguments[1];

        return (0, _end2.default)(arcgis.search({
          queryString: '"" group:' + groupId,
          page: page,
          sort: sort,
          order: order
        }), cb);
      };
      g.update = function (options, cb) {
        var updatePromise = arcgis.request({
          url: 'community/groups/' + groupId + '/update',
          form: options,
          post: true
        }).then(function (confirmation) {
          return g.get(groupId);
        });

        return (0, _end2.default)(updatePromise, cb);
      };
      g.members = function () {
        var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

        var _ref2$num = _ref2.num;
        var num = _ref2$num === undefined ? 100 : _ref2$num;
        var _ref2$page = _ref2.page;
        var page = _ref2$page === undefined ? 0 : _ref2$page;
        var _ref2$sort = _ref2.sort;
        var sort = _ref2$sort === undefined ? 'created' : _ref2$sort;
        var _ref2$order = _ref2.order;
        var order = _ref2$order === undefined ? 'desc' : _ref2$order;
        var cb = arguments[1];

        return (0, _end2.default)(arcgis.request({
          url: 'community/groups/' + groupId + '/users',
          form: {
            num: num,
            page: page,
            sort: sort,
            order: order
          }
        }), cb);
      };
      g.addUsers = function () {
        var users = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
        var cb = arguments[1];

        return (0, _end2.default)(arcgis.request({
          url: 'community/groups/' + groupId + '/addUsers',
          form: { users: users },
          post: true
        }), cb);
      };
      g.removeUsers = function () {
        var users = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
        var cb = arguments[1];

        return (0, _end2.default)(arcgis.request({
          url: 'community/groups/' + groupId + '/removeUsers',
          form: { users: users },
          post: true
        }), cb);
      };
      g.inviteUsers = function () {
        var _ref3 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

        var _ref3$users = _ref3.users;
        var users = _ref3$users === undefined ? [] : _ref3$users;
        var _ref3$role = _ref3.role;
        var role = _ref3$role === undefined ? 'group_member' : _ref3$role;
        var _ref3$expiration = _ref3.expiration;
        var expiration = _ref3$expiration === undefined ? 1440 : _ref3$expiration;
        var cb = arguments[1];

        var options = {
          users: users,
          role: role,
          expiration: expiration
        };
        return (0, _end2.default)(arcgis.request({
          url: 'community/groups/' + groupId + '/invite',
          form: options,
          post: true
        }), cb);
      };
      g.join = function (cb) {
        return (0, _end2.default)(arcgis.request({
          url: 'community/groups/' + groupId + '/join',
          form: {},
          post: true
        }), cb);
      };
      g.leave = function () {
        var form = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
        var cb = arguments[1];

        return (0, _end2.default)(arcgis.request({
          url: 'community/groups/' + groupId + '/leave',
          form: {},
          post: true
        }), cb);
      };
      g.changeOwner = function (username, cb) {
        return (0, _end2.default)(arcgis.request({
          url: 'community/groups/' + groupId + '/reassign',
          form: { targetUsername: username },
          post: true
        }), cb);
      };
      g.delete = function (cb) {
        return (0, _end2.default)(arcgis.request({
          url: 'community/groups/' + groupId + '/delete',
          form: {},
          post: true
        }), cb);
      };

      return g;
    });

    return (0, _end2.default)(promise, cb);
  };
}