'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Organization;
var sanitizeHtml = require('sanitize-html');
var end = require('../lib/end');

function Organization(arcgis) {
  function get() {
    var id = arguments.length <= 0 || arguments[0] === undefined ? 'self' : arguments[0];

    return arcgis.request({ url: 'portals/' + id }).then(function (o) {
      o.description = sanitizeHtml(o.description);
      return o;
    });
  }

  return function getOrganization(orgId, cb) {
    var promise = get(orgId).then(function (o) {
      o.get = get;
      o.update = function (options, cb) {
        var updatePromise = arcgis.request({
          url: 'portals/' + o.id + '/update',
          form: options,
          post: true
        }).then(function (confirmation) {
          return o.get(o.id);
        });
        return end(updatePromise, cb);
      };
      o.content = function () {
        var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

        var _ref$num = _ref.num;
        var num = _ref$num === undefined ? 100 : _ref$num;
        var _ref$page = _ref.page;
        var page = _ref$page === undefined ? 0 : _ref$page;
        var _ref$sort = _ref.sort;
        var sort = _ref$sort === undefined ? 'created' : _ref$sort;
        var _ref$order = _ref.order;
        var order = _ref$order === undefined ? 'desc' : _ref$order;
        var cb = arguments[1];

        return end(arcgis.search({
          queryString: '"" accountid:' + o.id,
          page: page,
          sort: sort,
          order: order
        }), cb);
      };
      o.members = function () {
        var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

        var _ref2$num = _ref2.num;
        var num = _ref2$num === undefined ? 100 : _ref2$num;
        var _ref2$page = _ref2.page;
        var page = _ref2$page === undefined ? 0 : _ref2$page;
        var _ref2$sort = _ref2.sort;
        var sort = _ref2$sort === undefined ? 'created' : _ref2$sort;
        var _ref2$order = _ref2.order;
        var order = _ref2$order === undefined ? 'desc' : _ref2$order;
        var cb = arguments[1];

        return end(arcgis.request({
          url: 'portals/self/users',
          form: {
            num: num,
            page: page,
            sort: sort,
            order: order
          }
        }), cb);
      };
      o.featured = function () {
        var _ref3 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

        var _ref3$num = _ref3.num;
        var num = _ref3$num === undefined ? 100 : _ref3$num;
        var _ref3$page = _ref3.page;
        var page = _ref3$page === undefined ? 0 : _ref3$page;
        var _ref3$sort = _ref3.sort;
        var sort = _ref3$sort === undefined ? 'created' : _ref3$sort;
        var _ref3$order = _ref3.order;
        var order = _ref3$order === undefined ? 'desc' : _ref3$order;
        var cb = arguments[1];

        var featuredPromise = o.get(o.id).then(function (o) {
          var featuredGroupId = o.homePageFeaturedContent.split(':')[1];
          return arcgis.group(featuredGroupId).then(function (group) {
            return group.content({
              num: num,
              page: page,
              sort: sort,
              order: order
            });
          });
        });
        return end(featuredPromise, cb);
      };

      return o;
    });
    return end(promise, cb);
  };
}